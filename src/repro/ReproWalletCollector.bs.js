// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Json = require("bs-json/src/Json.js");
var Inputs = require("./Inputs.bs.js");
var Network = require("../application/wallet/Network.bs.js");
var Belt_Set = require("bs-platform/lib/js/belt_Set.js");
var Json_decode = require("bs-json/src/Json_decode.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");

var inputs = Belt_Set.mergeMany(Network.inputSet(/* () */0), Json_decode.array(Network.decodeInput, Json.parseOrRaise(Inputs.inputs)));

function nonReservedOldInputs(param) {
  var unused = param[/* unused */0];
  console.log("eq before?", Belt_Set.eq(unused, inputs));
  return /* tuple */[
          Belt_Set.keepU(unused, (function (i) {
                  return !(i[/* txId */0] === "35815aaadec8a110391de8ae2e8c304e3e6084d3cd1344d8155a2293ee54324b" || i[/* txId */0] === "d029a186f3d3124aca7fdc95d085ce25e0519918bf63ecb32cdfbb1da3268d8c");
                })),
          Belt_Set.keepU(inputs, (function (i) {
                  return !(i[/* txId */0] === "35815aaadec8a110391de8ae2e8c304e3e6084d3cd1344d8155a2293ee54324b" || i[/* txId */0] === "d029a186f3d3124aca7fdc95d085ce25e0519918bf63ecb32cdfbb1da3268d8c");
                }))
        ];
}

function make() {
  return /* record */[
          /* unused */Network.inputSet(/* () */0),
          /* payoutProcesses */PrimitiveTypes.ProcessId[/* makeMap */8](/* () */0)
        ];
}

function apply(param, state) {
  return /* record */[
          /* unused */Belt_Set.add(state[/* unused */0], /* record */[
                /* txId */param[/* txId */2],
                /* txOutputN */param[/* txOutputN */3],
                /* address */param[/* address */0],
                /* value */param[/* amount */4],
                /* nCoSigners */2,
                /* nPubKeys */3
              ]),
          /* payoutProcesses */state[/* payoutProcesses */1]
        ];
}

exports.inputs = inputs;
exports.nonReservedOldInputs = nonReservedOldInputs;
exports.make = make;
exports.apply = apply;
/* inputs Not a pure module */
