// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var BitcoinjsLib = require("bitcoinjs-lib");

function transportErrorToString(param) {
  if (typeof param === "number") {
    return "Unknown";
  } else if (param.tag) {
    return "U2F_5(" + (param[0] + ")");
  } else {
    return "U2FNotSupported(" + (param[0] + ")");
  }
}

function decodeTransportError(error) {
  var match = error.id;
  switch (match) {
    case "U2FNotSupported" : 
        return /* U2FNotSupported */Block.__(0, [error.message]);
    case "U2F_5" : 
        return /* U2F_5 */Block.__(1, [error.message]);
    default:
      return /* Unknown */0;
  }
}

function getHDNode(path, network, ledger) {
  return ledger.getWalletPublicKey(path).then((function (pubKey) {
                return Promise.resolve(BitcoinjsLib.bip32.fromPublicKey(BitcoinjsLib.ECPair.fromPublicKey(Buffer.from(pubKey.publicKey, "hex"), {
                                    network: network
                                  }).publicKey, Buffer.from(pubKey.chainCode, "hex"), network));
              }));
}

exports.transportErrorToString = transportErrorToString;
exports.decodeTransportError = decodeTransportError;
exports.getHDNode = getHDNode;
/* bitcoinjs-lib Not a pure module */
