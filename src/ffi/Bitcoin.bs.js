// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var BitcoinjsLib = require("bitcoinjs-lib");

var BigInteger = /* module */[];

var Crypto = /* module */[];

var all = /* array */[
  BitcoinjsLib.networks.bitcoin,
  BitcoinjsLib.networks.testnet,
  BitcoinjsLib.networks.litecoin
];

var Networks = /* module */[/* all */all];

var Address = /* module */[];

var ECSignature = /* module */[];

function makeRandomWithNetwork(network) {
  return BitcoinjsLib.ECPair.makeRandom({
              network: network
            });
}

function makeWithNetwork(key, network) {
  return new BitcoinjsLib.ECPair(key, (null), {
              network: network
            });
}

var ECPair = /* module */[
  /* makeRandomWithNetwork */makeRandomWithNetwork,
  /* makeWithNetwork */makeWithNetwork
];

function fromBase58(base58) {
  return BitcoinjsLib.HDNode.fromBase58(base58, all);
}

var HDNode = /* module */[/* fromBase58 */fromBase58];

var Transaction = /* module */[];

var TxBuilder = /* module */[];

var Output = /* module */[];

var Multisig = /* module */[/* Output */Output];

var Output$1 = /* module */[];

var ScriptHash = /* module */[/* Output */Output$1];

var Output$2 = /* module */[];

var WitnessScriptHash = /* module */[/* Output */Output$2];

var Output$3 = /* module */[];

var NullData = /* module */[/* Output */Output$3];

var Script = /* module */[
  /* Multisig */Multisig,
  /* ScriptHash */ScriptHash,
  /* WitnessScriptHash */WitnessScriptHash,
  /* NullData */NullData
];

exports.BigInteger = BigInteger;
exports.Crypto = Crypto;
exports.Networks = Networks;
exports.Address = Address;
exports.ECSignature = ECSignature;
exports.ECPair = ECPair;
exports.HDNode = HDNode;
exports.Transaction = Transaction;
exports.TxBuilder = TxBuilder;
exports.Script = Script;
/* all Not a pure module */
