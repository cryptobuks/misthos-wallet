// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var WebWorker = require("../ffi/WebWorker.bs.js");
var WorkerLocalStorage = require("./WorkerLocalStorage.bs.js");
var VentureWorkerMessage = require("./VentureWorkerMessage.bs.js");
var Persist_workerBsJs = require("./Persist_worker.bs.js");

var Config = /* module */[];

var include = WebWorker.MakeClient([
      (function (prim) {
          return prim;
        }),
      (function (prim) {
          return prim;
        }),
      (function () {
          return new Persist_workerBsJs();
        })
    ]);

var postMessage = include[1];

function updateSession(worker) {
  Curry._2(postMessage, worker, /* UpdateSession */Block.__(0, [WorkerLocalStorage.readBlockstackItemsFromStorage(/* () */0)]));
  return /* () */0;
}

function ventureMessage(msg, worker) {
  return Curry._2(postMessage, worker, /* VentureWorkerMessage */Block.__(1, [VentureWorkerMessage.encodeOutgoing(msg)]));
}

var syncListeners = include[0];

var postMessageSync = include[2];

var handleMessage = include[3];

var make = include[4];

exports.Config = Config;
exports.syncListeners = syncListeners;
exports.postMessage = postMessage;
exports.postMessageSync = postMessageSync;
exports.handleMessage = handleMessage;
exports.make = make;
exports.updateSession = updateSession;
exports.ventureMessage = ventureMessage;
/* include Not a pure module */
