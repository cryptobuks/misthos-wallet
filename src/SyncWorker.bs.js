// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Json = require("bs-json/src/Json.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("./utils/Utils.bs.js");
var EventLog = require("./application/events/EventLog.bs.js");

function _encodeToSend(param) {
  if (param) {
    return {
            type: "RegularlyFetch",
            links: param[0],
            summary: Curry._1(EventLog.encodeSummary, param[1])
          };
  } else {
    return {
            type: "Wait",
            links: /* array */[],
            summary: null
          };
  }
}

function _decodeToReceived(message) {
  return /* Fetched */[/* :: */[
            Json.parseOrRaise(message.data),
            /* [] */0
          ]];
}

var Message = /* module */[
  /* _encodeToSend */_encodeToSend,
  /* _decodeToReceived */_decodeToReceived
];

function postMessage(worker, message) {
  worker.postMessage(_encodeToSend(message));
  return /* () */0;
}

var workerPath = "/syncWorker.js";

function make(onMessage) {
  var worker = new Worker(workerPath);
  worker.onmessage = (function (param) {
      return Utils.$great$great(_decodeToReceived, onMessage, param);
    });
  return worker;
}

exports.Message = Message;
exports.postMessage = postMessage;
exports.workerPath = workerPath;
exports.make = make;
/* Utils Not a pure module */
