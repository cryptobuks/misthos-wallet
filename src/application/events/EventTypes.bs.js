// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Policy = require("../Policy.bs.js");
var Json_decode = require("bs-json/src/Json_decode.js");
var Json_encode = require("bs-json/src/Json_encode.js");
var PrimitiveTypes = require("../PrimitiveTypes.bs.js");

function makeProposal(name) {
  return (function (Data) {
      var make = function ($staropt$star, supporterId, policy, data) {
        var dependsOn = $staropt$star ? $staropt$star[0] : /* None */0;
        return /* record */[
                /* processId */PrimitiveTypes.ProcessId[/* make */7](/* () */0),
                /* dependsOn */dependsOn,
                /* supporterId */supporterId,
                /* policy */policy,
                /* data */data
              ];
      };
      var encode = function ($$event) {
        return Json_encode.object_(/* :: */[
                    /* tuple */[
                      "type",
                      name
                    ],
                    /* :: */[
                      /* tuple */[
                        "processId",
                        PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                      ],
                      /* :: */[
                        /* tuple */[
                          "dependsOn",
                          Json_encode.nullable(PrimitiveTypes.ProcessId[/* encode */2], $$event[/* dependsOn */1])
                        ],
                        /* :: */[
                          /* tuple */[
                            "supporterId",
                            PrimitiveTypes.UserId[/* encode */2]($$event[/* supporterId */2])
                          ],
                          /* :: */[
                            /* tuple */[
                              "policy",
                              Policy.encode($$event[/* policy */3])
                            ],
                            /* :: */[
                              /* tuple */[
                                "data",
                                Curry._1(Data[/* encode */0], $$event[/* data */4])
                              ],
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]);
      };
      var decode = function (raw) {
        var partial_arg = PrimitiveTypes.ProcessId[/* decode */3];
        return /* record */[
                /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
                /* dependsOn */Json_decode.field("dependsOn", (function (param) {
                        return Json_decode.optional(partial_arg, param);
                      }), raw),
                /* supporterId */Json_decode.field("supporterId", PrimitiveTypes.UserId[/* decode */3], raw),
                /* policy */Json_decode.field("policy", Policy.decode, raw),
                /* data */Json_decode.field("data", Data[/* decode */1], raw)
              ];
      };
      return /* module */[
              /* make */make,
              /* encode */encode,
              /* decode */decode
            ];
    });
}

function makeEndorsement(name) {
  var make = function (processId, supporterId) {
    return /* record */[
            /* processId */processId,
            /* supporterId */supporterId
          ];
  };
  var encode = function ($$event) {
    return Json_encode.object_(/* :: */[
                /* tuple */[
                  "type",
                  name
                ],
                /* :: */[
                  /* tuple */[
                    "processId",
                    PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                  ],
                  /* :: */[
                    /* tuple */[
                      "supporterId",
                      PrimitiveTypes.UserId[/* encode */2]($$event[/* supporterId */1])
                    ],
                    /* [] */0
                  ]
                ]
              ]);
  };
  var decode = function (raw) {
    return /* record */[
            /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
            /* supporterId */Json_decode.field("supporterId", PrimitiveTypes.UserId[/* decode */3], raw)
          ];
  };
  return /* module */[
          /* make */make,
          /* encode */encode,
          /* decode */decode
        ];
}

function makeAcceptance(name) {
  return (function (Data) {
      var fromProposal = function (param) {
        return /* record */[
                /* processId */param[/* processId */0],
                /* dependsOn */param[/* dependsOn */1],
                /* data */param[/* data */4]
              ];
      };
      var encode = function ($$event) {
        return Json_encode.object_(/* :: */[
                    /* tuple */[
                      "type",
                      name
                    ],
                    /* :: */[
                      /* tuple */[
                        "processId",
                        PrimitiveTypes.ProcessId[/* encode */2]($$event[/* processId */0])
                      ],
                      /* :: */[
                        /* tuple */[
                          "dependsOn",
                          Json_encode.nullable(PrimitiveTypes.ProcessId[/* encode */2], $$event[/* dependsOn */1])
                        ],
                        /* :: */[
                          /* tuple */[
                            "data",
                            Curry._1(Data[/* encode */0], $$event[/* data */2])
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ]);
      };
      var decode = function (raw) {
        var partial_arg = PrimitiveTypes.ProcessId[/* decode */3];
        return /* record */[
                /* processId */Json_decode.field("processId", PrimitiveTypes.ProcessId[/* decode */3], raw),
                /* dependsOn */Json_decode.field("dependsOn", (function (param) {
                        return Json_decode.optional(partial_arg, param);
                      }), raw),
                /* data */Json_decode.field("data", Data[/* decode */1], raw)
              ];
      };
      return /* module */[
              /* fromProposal */fromProposal,
              /* encode */encode,
              /* decode */decode
            ];
    });
}

function makeProcess(name) {
  return (function (Data) {
      var processName = name + "ApprovalProcess";
      var Proposed = makeProposal(name + "Proposed")(Data);
      var Endorsed = makeEndorsement(name + "Endorsed");
      var Accepted = makeAcceptance(name + "Accepted")(Data);
      return /* module */[
              /* processName */processName,
              /* Proposed */Proposed,
              /* Endorsed */Endorsed,
              /* Accepted */Accepted
            ];
    });
}

exports.makeProposal = makeProposal;
exports.makeEndorsement = makeEndorsement;
exports.makeAcceptance = makeAcceptance;
exports.makeProcess = makeProcess;
/* Policy Not a pure module */
