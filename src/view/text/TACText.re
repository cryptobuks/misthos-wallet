open Belt;

include ViewCommon;

type body =
  | P(array(string))
  | L(array(string));

type t = {
  heading: string,
  body,
};

let terms = [|
  {
    heading: "Why do I need to understand and acknowledge the terms of use?",
    body:
      P([|
        {|We know that you are eager to start using Misthos. It is however
          important that you understand and acknowledge the terms of use. This
          is for the safety of your own funds.|},
      |]),
  },
  {
    heading: "Because you and only you are responsible for your security.",
    body:
      L([|
        {|Be diligent and keep your Blockstack recovery phrase and password
          safe.|},
        {|If you lose your Blockstack recovery phrase or password, no one can
          recover it.|},
      |]),
  },
  {
    heading: "Because we at Misthos cannot",
    body:
      L([|
        {|Access your wallet or send your funds for you.|},
        {|Recover or change your Blockstack recovery phrase.|},
        {|Recover or reset your password.|},
        {|Reverse, cancel or refund transactions.|},
        {|Freeze accounts.|},
        {|Recover your data history.|},
      |]),
  },
  {
    heading: "What is Misthos?",
    body:
      L([|
        {|Misthos is a decentralised app for collaborative management of
          finances.|},
        {|Using Misthos a team of collaborating individuals can collectively
          manage and distribute their Bitcoin.|},
        {|Within Misthos, users create Ventures and dynamically add and remove
          Partners who are the custodians of a multisig Bitcoin wallet.|},
      |]),
  },
  {
    heading: "Misthos is not a custodial service",
    body:
      L([|
        {|When you open an account with a custodial service such as an exchange
          or a bank, the service creates an account for you in their system.|},
        {|A custodial service keeps track of your personal information, account
          passwords, balances, transactions and ultimately your funds.|},
        {|A custodial service charges fees to manage your account and provide
          services, like refunding transactions when your funds gets stolen.|},
      |]),
  },
  {
    heading: "Misthos is an Interface",
    body:
      L([|
        {|When you login to Misthos via your Blockstack ID, you are granting the
          Misthos app permission to write data to the storage location specified
          in your Blockstack profile.|},
        {|We at Misthos have no ability to change, decrypt or intercept any of
          the data written by the Misthos app to your storage location.|},
        {|All data that is shared amongst Partners of a venture is encrypted and
         can only be decrypted by the Venture Partners.|},
        {|If the data is lost or corrupted, we at Misthos have no ability to
          recover it for you.|},
        {|When you login to Misthos via your Blockstack ID, the Misthos app is
         provided with a cryptographic key pair derived from the recovery
         phrase securing your Blockstack ID.|},
        {|This app specific key pair is used in the derivation process when
          generating and signing Bitcoin addresses|},
        {|Your private keys or any account information are never transmitted or
          stored by Misthos.|},
        {|If you lose the recovery phrase of your Blockstack ID, you will lose
          the ability to sign transactions generated by Misthos.|},
      |]),
  },
  {
    heading: {|Multisig Wallet and the Distinction between Outdated and Fresh
              Addresses|},
    body:
      L([|
        {|Any Venture created in Misthos contains a Bitcoin wallet where the
          current Partners of the Venture are the custodians of the wallet|},
        {|Whenever a Partner is added or removed from a Venture, the
          configuration of the underlying Bitcoin multisig wallet is updated to
          reflect the current group of Partners.|},
        {|If a Venture adds a new Partner, then any addresses generated before
          the current configuration of Partners is activated are outdated. E.g
          If a Venture has two Partners and a third Partner is added, then all
          address generated with the two initial Partners are outdated
          addresses.|},
        {|As long as the Partners of the outdated addresses are still present,
          all income received on outdated addresses are automatically
          transferred to a fresh address the next time a payout is executed. E.g
          If a Venture has two Partners and a third Partner is added, then all
          income received on outdated addresses is automatically transferred to
          a fresh address the next time a payout is generated. This fresh
          address is then controlled by all the three Partners.|},
        {|If however there are not enough Partners present from an outdated
          address, the income will be temporarily locked up. E.g  If a Venture
          has three Partners and two of them leave, then any income that is
          received on an outdated address (i.e with three Partners) becomes
          temporarily locked up.|},
        {|As long as atleast one of the original Partners is still present,
          income will be spendable after the temporary lock up period of 12,672
          blocks. This approximately corresponds to three months. E.g  If a
          Venture has three Partners and two of them leave, then any income that
          is received on an outdated address (i.e with three Partners) becomes
          temporarily locked up and will become spendable after the three month
          period expires.|},
        {|If no Partners are left, then the Bitcoin will become permanently
          inaccessible.|},
        {|In order to mitigate the risk of funds getting temporarily locked up,
          use a fresh address (i.e generate a new income address) every time you
          want to receive Bitcoin. If Bitcoin is received on an outdated address
          then the Misthos interface will warn you to make a payout to ensure
          the income gets transferred to a fresh address.|},
      |]),
  },
  {
    heading: "Adding and Removing Partners within the Multisig Wallet",
    body:
      L([|
        {|Any Partner within a Venture can propose the addition of a new
          Partner. For the proposal to be successful, it requires N-of-N
          endorsements i.e all Partner within a Venture need to unanimously
          endorse the proposal.|},
        {|Any Partner within a Venture can propose the removal of another
          Partner. For the removal to be successful, this proposal requires
          N-1-of-N endorsements. E.g If a Venture has four Partners, then three
          Partners have to endorse the proposed removal..|},
      |]),
  },
  {
    heading: "Misthos Fee",
    body:
      L([|
        {|We do charge a transaction and handling fee for the use of our
         interface whenever you make a payout. Receiving income is not
         charged.|},
      |]),
  },
|];

let hash =
  terms
  |. Array.mapU((. section) =>
       Array.concat(
         [|section.heading|],
         switch (section.body) {
         | P(a) => a
         | L(a) => a
         },
       )
     )
  |> Array.concatMany
  |> Js.Array.joinWith(" ")
  |> Utils.hash;
