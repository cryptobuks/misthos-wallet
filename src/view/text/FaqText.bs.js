// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var ViewCommon = require("../ViewCommon.bs.js");
var MTypography = require("../components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var howCanATeamUseMisthosTodayA = ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Body1 */-904051921, /* None */0, /* Some */[true], /* None */0, /* None */0, /* array */[
          ViewCommon.text("Using Misthos, a team can:"),
          React.createElement("ul", undefined, React.createElement("li", undefined, ViewCommon.text("Aggregate income in a multisig Bitcoin wallet")), React.createElement("li", undefined, ViewCommon.text("Dynamically add / remove Partners as they participate in the venture")), React.createElement("li", undefined, ViewCommon.text("Collectively approve payouts")), React.createElement("li", undefined, ViewCommon.text("Have full visibility of the transaction and approval history")))
        ]));

var whatIsUniqueAboutMisthosAP2 = ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Body1 */-904051921, /* None */0, /* Some */[true], /* None */0, /* None */0, /* array */[
          ViewCommon.text("Misthos is unique for its:"),
          React.createElement("ol", undefined, React.createElement("li", undefined, ViewCommon.text("Quick wallet set-up")), React.createElement("li", undefined, ViewCommon.text("Scalability: dynamically adding / removing wallet custodians (Partners)")), React.createElement("li", undefined, ViewCommon.text("Streamlined user-experience for collaborative approval processes")))
        ]));

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var whatIsMisthosQ = "What is Misthos?";

var whatIsMisthosAP1 = "Misthos is a decentralised app for collaborative management of finances. Individuals collaborating on a project can use Misthos to manage and distribute their bitcoin income as a team.";

var whatIsMisthosAP2 = "Users can create Ventures and dynamically add and remove Partners that share and control a multisig Bitcoin wallet. Ventures can receive Bitcoin, and payouts can be proposed that require endorsement from the other Partners before they are submitted to the Bitcoin network.";

var whatIsMisthosAP3 = "In the future Misthos will evolve beyond being a shared wallet to a complete solution for collaboratively managing your cash flow with bitcoin!";

var whoIsMisthosForQ = "Who is Misthos for?";

var whoIsMisthosForA = "Misthos is for any team that need a simple way to transact from a shared multisig Bitcoin wallet.";

var howCanATeamUseMisthosTodayQ = "How can a team use Misthos today?";

var whatIsUniqueAboutMisthosQ = "What is unique about Misthos?";

var whatIsUniqueAboutMisthosAP1 = "The Misthos multisig wallet is optimised for collaborating individuals who need a simple way to collectively share and distribute Bitcoin.";

exports.text = text;
exports.extractString = extractString;
exports.whatIsMisthosQ = whatIsMisthosQ;
exports.whatIsMisthosAP1 = whatIsMisthosAP1;
exports.whatIsMisthosAP2 = whatIsMisthosAP2;
exports.whatIsMisthosAP3 = whatIsMisthosAP3;
exports.whoIsMisthosForQ = whoIsMisthosForQ;
exports.whoIsMisthosForA = whoIsMisthosForA;
exports.howCanATeamUseMisthosTodayQ = howCanATeamUseMisthosTodayQ;
exports.howCanATeamUseMisthosTodayA = howCanATeamUseMisthosTodayA;
exports.whatIsUniqueAboutMisthosQ = whatIsUniqueAboutMisthosQ;
exports.whatIsUniqueAboutMisthosAP1 = whatIsUniqueAboutMisthosAP1;
exports.whatIsUniqueAboutMisthosAP2 = whatIsUniqueAboutMisthosAP2;
/* howCanATeamUseMisthosTodayA Not a pure module */
