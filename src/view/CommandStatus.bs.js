// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("CommandStatus");

function make(trackId, lastResponse, children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var initialCmdStatus = trackId ? /* Pending */Block.__(0, [trackId[0]]) : /* Idle */0;
              var tmp;
              if (typeof initialCmdStatus === "number" || initialCmdStatus.tag || !lastResponse) {
                tmp = initialCmdStatus;
              } else {
                var match = lastResponse[0];
                if (initialCmdStatus[0] === match[0]) {
                  var response = match[1];
                  tmp = response.tag ? /* Error */Block.__(1, [response[0]]) : /* Success */Block.__(2, [response[0]]);
                } else {
                  tmp = initialCmdStatus;
                }
              }
              return Curry._1(children, tmp);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
