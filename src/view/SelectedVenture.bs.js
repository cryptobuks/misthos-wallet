// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../application/wallet/BTC.bs.js");
var Css = require("bs-css/src/Css.js");
var Grid = require("./components/Grid.bs.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Icons = require("./Icons.bs.js");
var Theme = require("./Theme.bs.js");
var React = require("react");
var Router = require("./Router.bs.js");
var Balance = require("./components/Balance.bs.js");
var MButton = require("./components/MButton.bs.js");
var Partner = require("./components/Partner.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var MFabButton = require("./components/MFabButton.bs.js");
var ScrollList = require("./components/ScrollList.bs.js");
var ViewCommon = require("./ViewCommon.bs.js");
var Environment = require("../web/Environment.bs.js");
var MTypography = require("./components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Transaction = require("./components/Transaction.bs.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var WarningsText = require("./text/WarningsText.bs.js");
var AlertListItem = require("./components/AlertListItem.bs.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");
var MaterialUi_List = require("@jsiebern/bs-material-ui/src/MaterialUi_List.bs.js");
var MaterialUi_IconButton = require("@jsiebern/bs-material-ui/src/MaterialUi_IconButton.bs.js");

var component = ReasonReact.statelessComponent("SelectedVenture");

var addressesButtonIcon = Css.style(/* :: */[
      Css.marginTop(Css.px(Caml_int32.imul(Theme.space(2), -1))),
      /* :: */[
        Css.marginBottom(Css.px(Caml_int32.imul(Theme.space(1), -1))),
        /* :: */[
          Css.transform(Css.rotate(Css.deg(90))),
          /* [] */0
        ]
      ]
    ]);

var Styles = /* module */[/* addressesButtonIcon */addressesButtonIcon];

function make(viewData, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var match = Environment.get(/* () */0)[/* network */5];
              var warning = match !== 1 ? undefined : Js_primitive.some(WarningsText.testnet);
              var prospects = List.map((function (prospect) {
                      var match = prospect[/* data */5][/* processType */1];
                      var partial_arg_000 = viewData[/* ventureId */0];
                      var partial_arg_001 = /* Partner */Block.__(0, [prospect[/* processId */0]]);
                      var partial_arg = /* Venture */Block.__(0, [
                          partial_arg_000,
                          partial_arg_001
                        ]);
                      var match$1 = prospect[/* data */5][/* processType */1];
                      return ReasonReact.element(PrimitiveTypes.ProcessId[/* toString */0](prospect[/* processId */0]), undefined, AlertListItem.make(match ? /* Plus */0 : /* Minus */1, (function (param) {
                                        return Router.clickToRoute(partial_arg, param);
                                      }), ViewCommon.text((
                                          match$1 ? "Addition" : "Removal"
                                        ) + (" of '" + (PrimitiveTypes.UserId[/* toString */0](prospect[/* data */5][/* userId */0]) + "'"))), Js_primitive.some(ViewCommon.text("proposed by " + PrimitiveTypes.UserId[/* toString */0](prospect[/* proposedBy */2]))), /* array */[]));
                    }), viewData[/* prospects */4]);
              var partners = $$Array.of_list(Belt_List.concat(prospects, List.map((function (partner) {
                              return ReasonReact.element(PrimitiveTypes.UserId[/* toString */0](partner[/* userId */0]), undefined, Partner.make(partner[/* userId */0], partner[/* name */1], undefined, undefined, undefined, undefined, /* array */[]));
                            }), viewData[/* partners */3])));
              var payouts = $$Array.of_list(List.map((function (param) {
                          var processId = param[/* processId */0];
                          var partial_arg_000 = viewData[/* ventureId */0];
                          var partial_arg_001 = /* Payout */Block.__(1, [processId]);
                          var partial_arg = /* Venture */Block.__(0, [
                              partial_arg_000,
                              partial_arg_001
                            ]);
                          return ReasonReact.element(PrimitiveTypes.ProcessId[/* toString */0](processId), undefined, AlertListItem.make(/* ArrowUp */2, (function (param) {
                                            return Router.clickToRoute(partial_arg, param);
                                          }), ViewCommon.text("Payout of " + (BTC.format(param[/* data */5][/* summary */1][/* spentWithFees */2]) + " BTC")), Js_primitive.some(ViewCommon.text("proposed by " + PrimitiveTypes.UserId[/* toString */0](param[/* proposedBy */2]))), /* array */[]));
                        }), viewData[/* payoutsPendingApproval */7]));
              var unconfirmed = viewData[/* unconfirmedTxs */5];
              var confirmed = viewData[/* confirmedTxs */6];
              var transactions = $$Array.of_list(Belt_List.concatMany(/* array */[
                        List.mapi((function (iter, tx) {
                                var match = tx[/* txType */0];
                                var match$1 = match ? /* tuple */[
                                    /* Payout */1,
                                    "unconfirmed payout"
                                  ] : /* tuple */[
                                    /* Income */0,
                                    "unconfirmed income"
                                  ];
                                var partial_arg = tx[/* detailsLink */5];
                                return ReasonReact.element(String(iter), undefined, Transaction.make(match$1[0], match$1[1], tx[/* amount */3], tx[/* date */4], (function (param) {
                                                  return Router.clickToRoute(partial_arg, param);
                                                }), /* array */[]));
                              }), unconfirmed),
                        List.mapi((function (iter, tx) {
                                var match = tx[/* txType */0];
                                var match$1 = match ? /* tuple */[
                                    /* Payout */1,
                                    "payout"
                                  ] : /* tuple */[
                                    /* Income */0,
                                    "income"
                                  ];
                                var partial_arg = tx[/* detailsLink */5];
                                return ReasonReact.element(String(iter + List.length(unconfirmed) | 0), undefined, Transaction.make(match$1[0], match$1[1], tx[/* amount */3], tx[/* date */4], (function (param) {
                                                  return Router.clickToRoute(partial_arg, param);
                                                }), /* array */[]));
                              }), confirmed)
                      ]));
              var partial_arg_000 = viewData[/* ventureId */0];
              var partial_arg = /* Venture */Block.__(0, [
                  partial_arg_000,
                  /* Addresses */4
                ]);
              var match$1 = viewData[/* readOnly */2];
              var partial_arg_000$1 = viewData[/* ventureId */0];
              var partial_arg$1 = /* Venture */Block.__(0, [
                  partial_arg_000$1,
                  /* ManagePartners */1
                ]);
              return ReasonReact.element(undefined, undefined, Grid.make(Js_primitive.some(ViewCommon.text("Partners")), Js_primitive.some(ViewCommon.text("Transactions")), Js_primitive.some(React.createElement("div", undefined, ReasonReact.element(undefined, undefined, MTypography.make(/* Title */594052472, undefined, undefined, true, undefined, /* array */[
                                              ViewCommon.text(viewData[/* ventureName */1]),
                                              ReasonReact.element(undefined, undefined, MaterialUi_IconButton.make(addressesButtonIcon, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function (param) {
                                                          return Router.clickToRoute(partial_arg, param);
                                                        }), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[Icons.arrowUpCircle]))
                                            ])), ReasonReact.element(undefined, undefined, Balance.make(viewData[/* balance */8][/* currentSpendable */0], Js_primitive.some(viewData[/* balance */8][/* reserved */1]), /* array */[])))), Js_primitive.some(React.createElement("div", {
                                      className: Css.style(/* :: */[
                                            Css.display(/* flex */-1010954439),
                                            /* [] */0
                                          ])
                                    }, ReasonReact.element(undefined, undefined, MFabButton.make(/* Aqua */0, /* Venture */Block.__(0, [
                                                viewData[/* ventureId */0],
                                                /* Receive */5
                                              ]), /* array */[ViewCommon.text("RECEIVE")])), React.createElement("div", {
                                          className: Css.style(/* :: */[
                                                Css.width(Css.px(Theme.space(8))),
                                                /* [] */0
                                              ])
                                        }), ReasonReact.element(undefined, undefined, MFabButton.make(/* Orange */1, /* Venture */Block.__(0, [
                                                viewData[/* ventureId */0],
                                                /* CreatePayout */2
                                              ]), /* array */[ViewCommon.text("PAY OUT")])))), Js_primitive.some(React.createElement("div", {
                                      className: ScrollList.containerStyles
                                    }, match$1 ? React.createElement("b", undefined, ViewCommon.text("YOU HAVE BEEN REMOVED FROM THIS VENTURE; VENTURE IS IN READ ONLY")) : null, ReasonReact.element(undefined, undefined, ScrollList.make(/* array */[ReasonReact.element(undefined, undefined, MaterialUi_List.make(undefined, undefined, undefined, true, undefined, undefined, undefined, /* array */[partners]))])), ReasonReact.element(undefined, undefined, MButton.make(undefined, (function (param) {
                                                return Router.clickToRoute(partial_arg$1, param);
                                              }), undefined, true, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ViewCommon.text("Add or Remove Partners")])))), Js_primitive.some(React.createElement("div", {
                                      className: ScrollList.containerStyles
                                    }, ReasonReact.element(undefined, undefined, ScrollList.make(/* array */[
                                              ReasonReact.element(undefined, undefined, MaterialUi_List.make(undefined, undefined, undefined, true, undefined, undefined, undefined, /* array */[payouts])),
                                              ReasonReact.element(undefined, undefined, MaterialUi_List.make(undefined, undefined, undefined, true, undefined, undefined, undefined, /* array */[transactions]))
                                            ])))), undefined, warning, /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var ViewData = 0;

exports.text = text;
exports.extractString = extractString;
exports.ViewData = ViewData;
exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
