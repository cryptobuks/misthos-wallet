// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../application/wallet/BTC.bs.js");
var Body2 = require("./components/Body2.bs.js");
var React = require("react");
var Belt_Set = require("bs-platform/lib/js/belt_Set.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ViewCommon = require("./ViewCommon.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var WalletTypes = require("../application/wallet/WalletTypes.bs.js");
var IncomeVenture = require("../repro/IncomeVenture.bs.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");
var TransactionFee = require("../application/wallet/TransactionFee.bs.js");
var WalletInfoCollector = require("../application/wallet/WalletInfoCollector.bs.js");

var component = ReasonReact.statelessComponent("LoggedInHome");

function commands_000() {
  return /* () */0;
}

function commands_001() {
  return /* () */0;
}

function commands_002() {
  return /* () */0;
}

function commands_003() {
  return /* () */0;
}

function commands_004() {
  return /* () */0;
}

function commands_005() {
  return /* () */0;
}

function commands_006() {
  return /* () */0;
}

function commands_007(_, _$1, _$2) {
  return /* () */0;
}

function commands_008() {
  return /* () */0;
}

function commands_009() {
  return /* () */0;
}

var commands = /* record */[
  commands_000,
  commands_001,
  commands_002,
  commands_003,
  commands_004,
  commands_005,
  commands_006,
  commands_007,
  commands_008,
  commands_009
];

var mandatoryInputs = WalletInfoCollector.nonReservedOldInputs(WalletTypes.AccountIndex[/* default */9], PrimitiveTypes.UserId[/* fromString */1]("misthosio.id"), IncomeVenture.viewModel[/* walletInfoCollector */9]);

var defaultFee = BTC.fromSatoshis(/* int64 */[
      /* hi */0,
      /* lo */100
    ]);

var afterInputs = Belt_Set.keep(mandatoryInputs, (function (param) {
        return TransactionFee.canPayForItself(defaultFee, param);
      }));

console.log(mandatoryInputs, afterInputs);

var afterInputsCount = Belt_Array.reduce(Belt_Set.toArray(afterInputs), 0, (function (res, param) {
        var match = param[/* txId */0] === "b0478fed46339ffd2d0d36b0355d782be269b0452f452d7532b8f6e1dfa8e06b";
        if (match) {
          return res + 1 | 0;
        } else {
          return res;
        }
      }));

function make(_, _$1) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, Body2.make(/* Some */[/* :: */[
                                "My Ventures",
                                /* [] */0
                              ]], React.createElement("div", undefined, ViewCommon.text("there are " + (String(afterInputsCount) + " identical things"))), null, /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

exports.text = text;
exports.extractString = extractString;
exports.component = component;
exports.commands = commands;
exports.mandatoryInputs = mandatoryInputs;
exports.defaultFee = defaultFee;
exports.afterInputs = afterInputs;
exports.afterInputsCount = afterInputsCount;
exports.make = make;
/* component Not a pure module */
