// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../application/wallet/BTC.bs.js");
var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Body2 = require("./components/Body2.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var MInput = require("./components/MInput.bs.js");
var Balance = require("./components/Balance.bs.js");
var MButton = require("./components/MButton.bs.js");
var ViewCommon = require("./ViewCommon.bs.js");
var MTypography = require("./components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var WalletTypes = require("../application/wallet/WalletTypes.bs.js");

var component = ReasonReact.reducerComponent("Payout");

var balance = Css.style(/* :: */[
      Css.fontSize(Css.vw(2.0)),
      /* [] */0
    ]);

var Styles = /* module */[/* balance */balance];

function make(viewData, commands, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var match = param[/* state */1];
              var inputs = match[/* inputs */3];
              var summary = match[/* summary */2];
              var viewData = match[/* viewData */0];
              var destinationList = $$Array.of_list(List.map((function (param) {
                          return React.createElement("div", undefined, ViewCommon.text(param[0]), ViewCommon.text(BTC.format(param[1])));
                        }), match[/* destinations */1]));
              return ReasonReact.element(/* None */0, /* None */0, Body2.make(/* Some */[/* :: */[
                                "Create A Payout",
                                /* [] */0
                              ]], React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Title */594052472, /* None */0, /* array */[ViewCommon.text(viewData[/* ventureName */1])])), ReasonReact.element(/* None */0, /* None */0, Balance.make(viewData[/* balance */0], /* None */0, /* array */[])), ViewCommon.text("Proposed recipients"), React.createElement("ul", undefined, destinationList, React.createElement("li", undefined, ViewCommon.text("Network Fee - " + BTC.format(summary[/* networkFee */3]))), React.createElement("li", undefined, ViewCommon.text("Misthos Fee - " + BTC.format(summary[/* misthosFee */2]))))), React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, MInput.make(/* Some */["Recipient Address"], /* Some */[/* `String */[
                                            -976970511,
                                            inputs[/* recipientAddress */0]
                                          ]], /* Some */[(function (e) {
                                              return Curry._1(send, /* ChangeRecipientAddress */Block.__(0, [ViewCommon.extractString(e)]));
                                            })], /* Some */[false], /* Some */[true], /* None */0, /* array */[])), ReasonReact.element(/* None */0, /* None */0, MInput.make(/* Some */["BTC amount"], /* Some */[/* `String */[
                                            -976970511,
                                            inputs[/* btcAmount */1]
                                          ]], /* Some */[(function (e) {
                                              return Curry._1(send, /* ChangeBTCAmount */Block.__(1, [ViewCommon.extractString(e)]));
                                            })], /* Some */[false], /* Some */[true], /* None */0, /* array */[])), ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                              return Curry._1(send, /* ProposePayout */0);
                                            })], /* Some */[true], /* array */[ViewCommon.text("Propose Payout")]))), /* array */[]));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* viewData */viewData,
                      /* destinations : [] */0,
                      /* summary */viewData[/* initialSummary */2],
                      /* inputs : record */[
                        /* recipientAddress */"",
                        /* btcAmount */""
                      ]
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                Curry._3(commands[/* proposePayout */6], WalletTypes.AccountIndex[/* default */9], state[/* destinations */1], BTC.fromSatoshis(/* int64 */[
                          /* hi */0,
                          /* lo */100
                        ]));
                return /* NoUpdate */0;
              } else if (action.tag) {
                var init = state[/* inputs */3];
                return /* Update */Block.__(0, [/* record */[
                            /* viewData */state[/* viewData */0],
                            /* destinations */state[/* destinations */1],
                            /* summary */state[/* summary */2],
                            /* inputs : record */[
                              /* recipientAddress */init[/* recipientAddress */0],
                              /* btcAmount */action[0]
                            ]
                          ]]);
              } else {
                var init$1 = state[/* inputs */3];
                return /* Update */Block.__(0, [/* record */[
                            /* viewData */state[/* viewData */0],
                            /* destinations */state[/* destinations */1],
                            /* summary */state[/* summary */2],
                            /* inputs : record */[
                              /* recipientAddress */action[0],
                              /* btcAmount */init$1[/* btcAmount */1]
                            ]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var View = 0;

exports.text = text;
exports.extractString = extractString;
exports.View = View;
exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
