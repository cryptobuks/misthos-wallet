// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../../application/wallet/BTC.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function text(prim) {
  return prim;
}

function extractString($$event) {
  return $$event.target.value;
}

var component = ReasonReact.reducerComponent("ContributionInput");

function make(onSend, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var send = param[/* send */4];
      var state = param[/* state */2];
      return React.createElement("div", undefined, React.createElement("div", undefined, React.createElement("input", {
                          value: state[/* amount */0],
                          onChange: (function (e) {
                              return Curry._1(send, /* ChangeAmount */Block.__(0, [e.target.value]));
                            })
                        }), "BTC"), "Destination:", React.createElement("input", {
                      value: state[/* destination */1],
                      onChange: (function (e) {
                          return Curry._1(send, /* ChangeDestination */Block.__(1, [e.target.value]));
                        })
                    }), React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(send, /* Submit */0);
                        })
                    }, "Propose Payout"));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* amount */"0",
              /* destination */""
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        return /* UpdateWithSideEffects */Block.__(3, [
                  /* record */[
                    /* amount */"0",
                    /* destination */""
                  ],
                  (function () {
                      return Curry._1(onSend, /* :: */[
                                  /* tuple */[
                                    state[/* destination */1],
                                    BTC.fromString(state[/* amount */0])
                                  ],
                                  /* [] */0
                                ]);
                    })
                ]);
      } else if (action.tag) {
        return /* Update */Block.__(0, [/* record */[
                    /* amount */state[/* amount */0],
                    /* destination */action[0]
                  ]]);
      } else {
        return /* Update */Block.__(0, [/* record */[
                    /* amount */action[0],
                    /* destination */state[/* destination */1]
                  ]]);
      }
    });
  return newrecord;
}

exports.text = text;
exports.extractString = extractString;
exports.component = component;
exports.make = make;
/* component Not a pure module */
