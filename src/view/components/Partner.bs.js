// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Block = require("bs-platform/lib/js/block.js");
var Theme = require("../Theme.bs.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var ViewCommon = require("../ViewCommon.bs.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var PrimitiveTypes = require("../../application/PrimitiveTypes.bs.js");
var MaterialUi_Avatar = require("@jsiebern/bs-material-ui/src/MaterialUi_Avatar.bs.js");
var MaterialUi_ListItem = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItem.bs.js");
var MaterialUi_ListItemText = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItemText.bs.js");
var MaterialUi_ListItemSecondaryAction = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItemSecondaryAction.bs.js");

var component = ReasonReact.statelessComponent("Partner");

var lenght = Theme.space(8);

var avatar = Css.style(/* :: */[
      Css.backgroundColor(/* transparent */582626130),
      /* :: */[
        Css.width(Css.px(lenght)),
        /* :: */[
          Css.height(Css.px(lenght)),
          /* [] */0
        ]
      ]
    ]);

var primary = Css.style(/* :: */[
      Css.fontFamily(Theme.oswald),
      /* :: */[
        Css.fontSize(Css.px(18)),
        /* :: */[
          Css.fontWeight(600),
          /* :: */[
            Css.unsafe("letterSpacing", "0.7px"),
            /* :: */[
              Css.textDecoration(Css.underline),
              /* :: */[
                Css.textTransform(Css.uppercase),
                /* :: */[
                  Css.whiteSpace(Css.nowrap),
                  /* :: */[
                    Css.overflow(Css.hidden),
                    /* :: */[
                      Css.textOverflow(Css.ellipsis),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var secondary = Css.style(/* :: */[
      Css.fontFamily(Theme.sourceSansPro),
      /* :: */[
        Css.fontSize(Css.px(16)),
        /* :: */[
          Css.fontWeight(300),
          /* :: */[
            Css.unsafe("letterSpacing", "0.5px"),
            /* :: */[
              Css.color(Css.rgba(0, 0, 0, 0.87)),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

function secondaryAction(status) {
  if (status) {
    return Css.style(/* :: */[
                Css.paddingRight(Css.px(Theme.space(12))),
                /* [] */0
              ]);
  } else {
    return Css.style(/* :: */[
                Css.paddingRight(Css.px(Theme.space(4))),
                /* [] */0
              ]);
  }
}

var iconText = Css.style(/* :: */[
      Css.fontFamily(Theme.sourceSansPro),
      /* :: */[
        Css.fontSize(Css.px(36)),
        /* :: */[
          Css.lineHeight(1.0),
          /* :: */[
            Css.fontWeight(600),
            /* [] */0
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* lenght */lenght,
  /* avatar */avatar,
  /* primary */primary,
  /* secondary */secondary,
  /* secondaryAction */secondaryAction,
  /* iconText */iconText
];

function avatar$1(letter) {
  return React.createElement("svg", {
              height: "70",
              width: "70",
              viewBox: "0 0 70 70",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("defs", undefined, React.createElement("linearGradient", {
                      id: "b",
                      x1: "-1.146%",
                      y1: "71.336%",
                      y2: "0%"
                    }, React.createElement("stop", {
                          offset: "0%",
                          stopColor: "#59F7F0"
                        }), React.createElement("stop", {
                          offset: "28.22%",
                          stopColor: "#02A2B4"
                        }), React.createElement("stop", {
                          offset: "56.765%",
                          stopColor: "#067781"
                        }), React.createElement("stop", {
                          offset: "79.931%",
                          stopColor: "#FF006D"
                        }), React.createElement("stop", {
                          offset: "100%",
                          stopColor: "#F65E25"
                        }))), React.createElement("g", {
                  fill: "none",
                  fillRule: "evenodd",
                  transform: "translate(6 6)"
                }, React.createElement("ellipse", {
                      cx: "29",
                      cy: "28.642",
                      fill: "#000",
                      fillOpacity: ".98",
                      rx: "29",
                      ry: "28.642"
                    }), React.createElement("ellipse", {
                      cx: "29",
                      cy: "28.642",
                      rx: "32",
                      ry: "31.642",
                      stroke: "url(#b)",
                      strokeWidth: "6"
                    }), React.createElement("ellipse", {
                      cx: "29",
                      cy: "28.642",
                      rx: "31",
                      ry: "30.642",
                      stroke: "#FFF",
                      strokeWidth: "4"
                    })), React.createElement("text", {
                  alignmentBaseline: "middle",
                  fill: "#FFF",
                  fontFamily: Theme.sourceSansPro,
                  fontSize: "36px",
                  fontWeight: "600",
                  textAnchor: "middle",
                  x: "50%",
                  y: "50%"
                }, ViewCommon.text($$String.uppercase($$String.make(1, letter)))));
}

function make(partnerId, name, button, status, onClick, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var userId = PrimitiveTypes.UserId[/* toString */0](partnerId);
              var match = name ? /* tuple */[
                  ViewCommon.text(name[0]),
                  /* Some */[ViewCommon.text(userId)]
                ] : /* tuple */[
                  ViewCommon.text(userId),
                  /* None */0
                ];
              return ReasonReact.element(/* None */0, /* None */0, MaterialUi_ListItem.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[true], /* None */0, /* None */0, /* None */0, onClick, /* Some */[/* :: */[
                                /* SecondaryAction */Block.__(9, [secondaryAction(status)]),
                                /* [] */0
                              ]], /* None */0, /* array */[
                              ReasonReact.element(/* None */0, /* None */0, MaterialUi_Avatar.make(/* None */0, /* None */0, /* Some */[avatar], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[avatar$1(Caml_string.get(userId, 0))])),
                              ReasonReact.element(/* None */0, /* None */0, MaterialUi_ListItemText.make(/* None */0, /* None */0, /* None */0, /* Some */[match[0]], match[1], /* Some */[/* :: */[
                                          /* Primary */Block.__(3, [primary]),
                                          /* :: */[
                                            /* Secondary */Block.__(4, [secondary]),
                                            /* [] */0
                                          ]
                                        ]], /* None */0, /* array */[])),
                              button ? ReasonReact.element(/* None */0, /* None */0, MaterialUi_ListItemSecondaryAction.make(/* None */0, /* None */0, /* None */0, /* array */[button[0]])) : (
                                  status ? ReasonReact.element(/* None */0, /* None */0, MaterialUi_ListItemSecondaryAction.make(/* None */0, /* None */0, /* None */0, /* array */[status[0]])) : null
                                )
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

exports.text = text;
exports.extractString = extractString;
exports.component = component;
exports.Styles = Styles;
exports.avatar = avatar$1;
exports.make = make;
/* component Not a pure module */
