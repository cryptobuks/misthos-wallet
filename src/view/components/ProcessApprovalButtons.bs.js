// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var MButton = require("./MButton.bs.js");
var Spinner = require("./Spinner.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ViewCommon = require("../ViewCommon.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("ProcessApprovalButtons");

function make(endorseText, rejectText, canEndorse, canReject, onEndorse, onReject, cmdStatus, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */(function (param) {
              return /* record */[
                      /* buttonState */param[/* state */1][/* buttonState */0],
                      /* cmdStatus */cmdStatus
                    ];
            }),
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var match = param[/* state */1];
              var state = match[/* buttonState */0];
              var tmp;
              var exit = 0;
              var tmp$1 = match[/* cmdStatus */1];
              if (typeof tmp$1 === "number") {
                exit = 1;
              } else {
                switch (tmp$1.tag | 0) {
                  case 0 : 
                      if (state >= 2) {
                        switch (state - 2 | 0) {
                          case 0 : 
                              tmp = /* array */[ReasonReact.element(/* None */0, /* None */0, Spinner.make("Your endorsement is being submitted", /* None */0, /* array */[]))];
                              break;
                          case 1 : 
                              exit = 1;
                              break;
                          case 2 : 
                              tmp = /* array */[ReasonReact.element(/* None */0, /* None */0, Spinner.make("Your rejection is being submitted", /* None */0, /* array */[]))];
                              break;
                          
                        }
                      } else {
                        exit = 1;
                      }
                      break;
                  case 1 : 
                      tmp = /* array */[
                        ViewCommon.text("something went wrong"),
                        ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* Cancel */0);
                                    })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text("Try Again")]))
                      ];
                      break;
                  case 2 : 
                      exit = 1;
                      break;
                  
                }
              }
              if (exit === 1) {
                switch (state) {
                  case 0 : 
                      tmp = canReject ? /* array */[ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                        return Curry._1(send, /* Reject */3);
                                      })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text(rejectText)]))] : /* array */[null];
                      break;
                  case 1 : 
                      tmp = /* array */[
                        ViewCommon.text("Confirm your endorsement "),
                        ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* ConfirmEndorse */2);
                                    })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text("yes")])),
                        ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* Cancel */0);
                                    })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text("No")]))
                      ];
                      break;
                  case 3 : 
                      tmp = /* array */[
                        ViewCommon.text("Confirm your rejection"),
                        ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* ConfirmReject */4);
                                    })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text("yes")])),
                        ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                      return Curry._1(send, /* Cancel */0);
                                    })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text("No")]))
                      ];
                      break;
                  case 2 : 
                  case 4 : 
                      tmp = /* array */[null];
                      break;
                  
                }
              }
              return Belt_Array.concatMany(/* array */[
                          state !== 0 ? /* array */[null] : (
                              canEndorse ? /* array */[ReasonReact.element(/* None */0, /* None */0, MButton.make(/* None */0, /* Some */[(function () {
                                                return Curry._1(send, /* Endorse */1);
                                              })], /* None */0, /* Some */[true], /* None */0, /* array */[ViewCommon.text(endorseText)]))] : /* array */[null]
                            ),
                          tmp
                        ]);
            }),
          /* initialState */(function () {
              return /* record */[
                      /* buttonState : NoDecision */0,
                      /* cmdStatus : Idle */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* buttonState : NoDecision */0,
                                /* cmdStatus : Idle */0
                              ]]);
                case 1 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* buttonState : ConfirmEndorse */1,
                                /* cmdStatus */state[/* cmdStatus */1]
                              ]]);
                case 2 : 
                    return /* UpdateWithSideEffects */Block.__(2, [
                              /* record */[
                                /* buttonState : EndorsementSubmited */2,
                                /* cmdStatus */state[/* cmdStatus */1]
                              ],
                              (function () {
                                  return Curry._1(onEndorse, /* () */0);
                                })
                            ]);
                case 3 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* buttonState : ConfirmReject */3,
                                /* cmdStatus */state[/* cmdStatus */1]
                              ]]);
                case 4 : 
                    return /* UpdateWithSideEffects */Block.__(2, [
                              /* record */[
                                /* buttonState : RejectionSubmited */4,
                                /* cmdStatus */state[/* cmdStatus */1]
                              ],
                              (function () {
                                  return Curry._1(onReject, /* () */0);
                                })
                            ]);
                
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

exports.text = text;
exports.extractString = extractString;
exports.component = component;
exports.make = make;
/* component Not a pure module */
