// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Theme = require("../Theme.bs.js");
var React = require("react");
var Colors = require("../Colors.bs.js");
var Glamor = require("glamor");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("Grid");

var gap = String(Theme.space(8)) + "px";

function grid(firstRow) {
  return Glamor.css({
              display: "grid",
              gridGap: gap + (" " + gap),
              gridTemplateAreas: firstRow ? "\n                       \". area1 . area2 .\"\n                       \". title1 . title2 .\"\n                       \". area3 . area4 .\"\n                       " : "\n                       \". title1 . title2 .\"\n                       \". area3 . area4 .\"\n                   ",
              gridTemplateColumns: "[begin] minmax(0, 1fr) minmax(400px, 4fr) 1fr minmax(400px, 4fr) minmax(0, 1fr) [end]",
              gridTemplateRows: firstRow ? "min-content [begin] min-content [end] auto" : "[begin] min-content [end] auto",
              width: "100%"
            });
}

function area(area$1) {
  return Css.style(/* :: */[
              Css.unsafe("gridArea", area$1),
              /* [] */0
            ]);
}

var title = Css.style(/* :: */[
      Css.fontFamily(Theme.oswald),
      /* :: */[
        Css.fontSize(Css.px(30)),
        /* :: */[
          Css.fontWeight(600),
          /* :: */[
            Css.color(Colors.white),
            /* :: */[
              Css.textTransform(Css.uppercase),
              /* :: */[
                Css.marginBottom(Css.px(4)),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var titleBg = Css.style(/* :: */[
      Css.unsafe("gridColumn", "begin / end"),
      /* :: */[
        Css.unsafe("gridRow", "begin / end"),
        /* :: */[
          Css.backgroundColor(Colors.black),
          /* :: */[
            Css.borderBottomWidth(Css.px(4)),
            /* :: */[
              Css.borderBottomStyle(Css.solid),
              /* :: */[
                Css.unsafe("borderImageSlice", "1"),
                /* :: */[
                  Css.unsafe("borderImageSource", Colors.uGradient),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* gap */gap,
  /* grid */grid,
  /* area */area,
  /* title */title,
  /* titleBg */titleBg
];

function make(title1, title2, area1, area2, area3, area4, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          className: grid(area1)
                        }, React.createElement("div", {
                              key: "titleBg",
                              className: titleBg
                            }), $$Array.map((function (param) {
                                var item = param[0];
                                if (item) {
                                  var area$1 = param[1];
                                  return React.createElement("div", {
                                              key: area$1,
                                              className: area(area$1) + (" " + param[2])
                                            }, item[0]);
                                } else {
                                  return null;
                                }
                              }), /* array */[
                              /* tuple */[
                                area1,
                                "area1",
                                ""
                              ],
                              /* tuple */[
                                area2,
                                "area2",
                                ""
                              ],
                              /* tuple */[
                                title1,
                                "title1",
                                title
                              ],
                              /* tuple */[
                                title2,
                                "title2",
                                title
                              ],
                              /* tuple */[
                                area3,
                                "area3",
                                ""
                              ],
                              /* tuple */[
                                area4,
                                "area4",
                                ""
                              ]
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
