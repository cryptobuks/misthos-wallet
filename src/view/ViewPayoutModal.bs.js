// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var BTC = require("../application/wallet/BTC.bs.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Body2 = require("./components/Body2.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("../utils/Utils.bs.js");
var React = require("react");
var Voters = require("./components/Voters.bs.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var ViewCommon = require("./ViewCommon.bs.js");
var MTypography = require("./components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");
var ProcessApprovalButtons = require("./components/ProcessApprovalButtons.bs.js");

var component = ReasonReact.statelessComponent("Drawer");

function make(viewData, commands, cmdStatus, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var match = viewData[/* data */5];
              var summary = match[/* summary */1];
              var status = match[/* payoutStatus */0];
              var processId = viewData[/* processId */0];
              var destinationList = $$Array.of_list(List.mapi((function (idx, param) {
                          return React.createElement("div", {
                                      key: String(idx)
                                    }, ViewCommon.text(param[0] + (" - " + BTC.format(param[1]))));
                        }), summary[/* destinations */1]));
              var payoutStatus;
              if (typeof status === "number") {
                switch (status) {
                  case 0 : 
                      payoutStatus = ViewCommon.text("PendingApproval");
                      break;
                  case 1 : 
                      payoutStatus = ViewCommon.text("Accepted");
                      break;
                  case 2 : 
                      payoutStatus = ViewCommon.text("Unconfirmed");
                      break;
                  case 3 : 
                      payoutStatus = ViewCommon.text("Confirmed");
                      break;
                  
                }
              } else {
                payoutStatus = ViewCommon.text("Failed with reason: " + status[0]);
              }
              var transactionId = Js_option.getWithDefault(null, Utils.mapOption((function (txId) {
                          return ViewCommon.text("Transaction ID: " + txId);
                        }), match[/* txId */2]));
              return ReasonReact.element(/* None */0, /* None */0, Body2.make(/* Some */[/* :: */[
                                "Payout Details",
                                /* [] */0
                              ]], React.createElement("div", undefined, ViewCommon.text("Proposed by " + PrimitiveTypes.UserId[/* toString */0](viewData[/* proposedBy */2])), Js_option.getWithDefault(null, Utils.mapOption((function (date) {
                                            return ViewCommon.text(date.toString());
                                          }), match[/* date */3])), payoutStatus, ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Title */594052472, /* None */0, /* array */[ViewCommon.text("Payout")])), React.createElement("ul", undefined, destinationList, React.createElement("li", undefined, ViewCommon.text("Network Fee - " + BTC.format(summary[/* networkFee */4]))), React.createElement("li", undefined, ViewCommon.text("Misthos Fee - " + BTC.format(summary[/* misthosFee */3]))), React.createElement("li", undefined, ViewCommon.text("Total payout- " + BTC.format(summary[/* spentWithFees */2])))), transactionId), React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Voters.make(viewData[/* voters */4], /* array */[])), ReasonReact.element(/* None */0, /* None */0, ProcessApprovalButtons.make("Endorse Payout", "Reject Payout", viewData[/* canVote */3], (function () {
                                            return Curry._1(commands[/* endorsePayout */7], processId);
                                          }), (function () {
                                            return Curry._1(commands[/* rejectPayout */8], processId);
                                          }), cmdStatus, /* array */[]))), /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var ViewData = 0;

exports.text = text;
exports.extractString = extractString;
exports.ViewData = ViewData;
exports.component = component;
exports.make = make;
/* component Not a pure module */
