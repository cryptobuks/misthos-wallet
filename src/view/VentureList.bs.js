// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Utils = require("../utils/Utils.bs.js");
var React = require("react");
var Colors = require("./Colors.bs.js");
var Router = require("./Router.bs.js");
var Spinner = require("./components/Spinner.bs.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ViewCommon = require("./ViewCommon.bs.js");
var MTypography = require("./components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");
var MaterialUi_List = require("@jsiebern/bs-material-ui/src/MaterialUi_List.bs.js");
var MaterialUi_ListItem = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItem.bs.js");
var MaterialUi_ListItemText = require("@jsiebern/bs-material-ui/src/MaterialUi_ListItemText.bs.js");

var component = ReasonReact.statelessComponent("VentureList");

var linkSelected = Css.style(/* :: */[
      Css.color(Colors.misthosTeal),
      /* [] */0
    ]);

var link = Css.style(/* :: */[
      Css.fontSize(Css.px(16)),
      /* :: */[
        Css.textDecoration(Css.underline),
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* linkSelected */linkSelected,
  /* link */link
];

function make(selected, index, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var ventures = Utils.mapOption((function (param) {
                      return param[/* ventures */0];
                    }), index);
              var breakingChange = Utils.mapOption((function (param) {
                      return param[/* breakingChange */1];
                    }), index);
              var breakingNotification = breakingChange && breakingChange[0] ? ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Body2 */-904051920, /* Some */[Css.style(/* :: */[
                                Css.color(Colors.error),
                                /* [] */0
                              ])], /* Some */[true], /* None */0, /* None */0, /* array */[ViewCommon.text("In preparation for our mainnet launch it has been necessary to make a breaking change. As a result your testnet ventures are no longer accessible. We will garuantee backwards compatibility following our public release on mainnet.")])) : null;
              var ventureList;
              if (ventures) {
                var ventures$1 = ventures[0];
                ventureList = ventures$1 ? $$Array.of_list(List.map((function (param) {
                              var id = param[/* id */0];
                              var ids = PrimitiveTypes.VentureId[/* toString */0](id);
                              var partial_arg = /* Venture */Block.__(0, [
                                  id,
                                  /* None */0
                                ]);
                              var match = Caml_obj.caml_equal(/* Some */[id], selected);
                              return ReasonReact.element(/* Some */[ids], /* None */0, MaterialUi_ListItem.make(/* Some */[true], /* None */0, /* Some */[/* `String */[
                                                -976970511,
                                                "li"
                                              ]], /* None */0, /* None */0, /* Some */[true], /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* `String */[
                                                -976970511,
                                                ids
                                              ]], /* None */0, /* Some */[(function (param) {
                                                  return Router.clickToRoute(partial_arg, param);
                                                })], /* None */0, /* None */0, /* array */[ReasonReact.element(/* None */0, /* None */0, MaterialUi_ListItemText.make(/* None */0, /* None */0, /* None */0, /* Some */[ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Title */594052472, /* Some */[link + (" " + (
                                                                      match ? linkSelected : ""
                                                                    ))], /* None */0, /* None */0, /* None */0, /* array */[ViewCommon.text(param[/* name */1])]))], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[]))]));
                            }), ventures$1)) : ReasonReact.element(/* None */0, /* None */0, MTypography.make(/* Body2 */-904051920, /* None */0, /* None */0, /* None */0, /* None */0, /* array */[ViewCommon.text("You are not part of any Ventures yet. Create a new Venture, or join an existing Venture if you have an invite link from a Partner.")]));
              } else {
                ventureList = ReasonReact.element(/* None */0, /* None */0, Spinner.make("loading index", /* None */0, /* array */[]));
              }
              return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, MaterialUi_List.make(/* None */0, /* None */0, /* Some */[true], /* Some */[true], /* None */0, /* None */0, /* None */0, /* array */[
                                  breakingNotification,
                                  ventureList
                                ])));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

exports.text = text;
exports.extractString = extractString;
exports.component = component;
exports.Styles = Styles;
exports.make = make;
/* component Not a pure module */
