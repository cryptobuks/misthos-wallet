// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Grid = require("./components/Grid.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Voters = require("./components/Voters.bs.js");
var Partner = require("./components/Partner.bs.js");
var StatusChip = require("./components/StatusChip.bs.js");
var ViewCommon = require("./ViewCommon.bs.js");
var MTypography = require("./components/MTypography.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var WarningsText = require("./text/WarningsText.bs.js");
var PrimitiveTypes = require("../application/PrimitiveTypes.bs.js");
var ProcessApprovalButtons = require("./components/ProcessApprovalButtons.bs.js");

var component = ReasonReact.statelessComponent("ViewPartner");

function make(viewData, commands, cmdStatus, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var match = viewData[/* partnerProcess */0];
              var match$1 = match[/* data */5];
              var processType = match$1[/* processType */1];
              var userId = match$1[/* userId */0];
              var processId = match[/* processId */0];
              var match$2 = processType ? /* tuple */[
                  (function () {
                      return Curry._1(commands[/* endorsePartner */2], processId);
                    }),
                  (function () {
                      return Curry._1(commands[/* rejectPartner */3], processId);
                    })
                ] : /* tuple */[
                  (function () {
                      return Curry._1(commands[/* endorsePartnerRemoval */5], processId);
                    }),
                  (function () {
                      return Curry._1(commands[/* rejectPartnerRemoval */6], processId);
                    })
                ];
              var processTypeString = processType ? "Addition" : "Removal";
              var match$3;
              switch (match[/* status */1]) {
                case 0 : 
                    match$3 = /* tuple */[
                      "Pending Approval",
                      /* Pending */0
                    ];
                    break;
                case 1 : 
                    match$3 = /* tuple */[
                      "Accepted",
                      /* Success */2
                    ];
                    break;
                case 2 : 
                    match$3 = /* tuple */[
                      "Denied",
                      /* Failure */1
                    ];
                    break;
                case 3 : 
                    match$3 = /* tuple */[
                      "Aborted",
                      /* Failure */1
                    ];
                    break;
                
              }
              var statusChip = ReasonReact.element(undefined, undefined, StatusChip.make(match$3[1], match$3[0], /* array */[]));
              var match$4 = viewData[/* atRiskWarning */1];
              var alertText = match$4 ? WarningsText.partnerRemovalRisk : undefined;
              return ReasonReact.element(undefined, undefined, Grid.make(Js_primitive.some(ViewCommon.text("Proposed Partner " + processTypeString)), undefined, undefined, undefined, Js_primitive.some(React.createElement("div", undefined, ReasonReact.element(undefined, undefined, MTypography.make(/* Title */594052472, undefined, undefined, undefined, undefined, /* array */[ViewCommon.text("Proposed Partner " + processTypeString)])), ReasonReact.element(PrimitiveTypes.UserId[/* toString */0](userId), undefined, Partner.make(userId, undefined, undefined, undefined, undefined, undefined, /* array */[])), ReasonReact.element(undefined, undefined, MTypography.make(/* Body2 */-904051920, undefined, true, undefined, undefined, /* array */[ViewCommon.text("Proposed by " + PrimitiveTypes.UserId[/* toString */0](match[/* proposedBy */2]))])), ReasonReact.element(undefined, undefined, MTypography.make(/* Body2 */-904051920, undefined, undefined, undefined, undefined, /* array */[
                                              ViewCommon.text("Status: "),
                                              statusChip
                                            ])))), Js_primitive.some(React.createElement("div", undefined, ReasonReact.element(undefined, undefined, Voters.make(match[/* voters */4], /* array */[])), ReasonReact.element(undefined, undefined, ProcessApprovalButtons.make("Endorse Partner " + processTypeString, alertText, "Reject Partner " + processTypeString, match[/* canVote */3], match$2[0], match$2[1], (function () {
                                                return Curry._1(commands[/* reset */0], /* () */0);
                                              }), cmdStatus, /* array */[])))), undefined, undefined, /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var text = ViewCommon.text;

var extractString = ViewCommon.extractString;

var ViewData = 0;

exports.text = text;
exports.extractString = extractString;
exports.ViewData = ViewData;
exports.component = component;
exports.make = make;
/* component Not a pure module */
