// Generated by BUCKLESCRIPT VERSION 3.1.1, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Fixtures = require("../helpers/Fixtures.bs.js");
var Generators = require("../helpers/Generators.bs.js");
var PrimitiveTypes = require("../../src/application/PrimitiveTypes.bs.js");
var ValidationHelpers = require("../helpers/ValidationHelpers.bs.js");
var Venture__Validation = require("../../src/application/Venture__Validation.bs.js");

describe("PartnerProposal", (function () {
        Fixtures.withCached(/* None */0, "PartnerProposal", "when proposing another partner", (function () {
                return Generators.withUserSessions(2);
              }), (function (sessions) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user1 = match[0];
                return Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1));
              }), (function (sessions, log) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user2 = match[1];
                var user1 = match[0];
                var func = Generators.Log[/* withPartnerProposed */12];
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4](Curry._1((function (param, param$1, param$2) {
                                        return Curry._5(func, param, param$1, param$2, user1, user2);
                                      })(/* None */0, /* None */0, /* None */0), log)), /* Ok */0);
              }));
        Fixtures.withCached(/* None */0, "PartnerProposal", "when the prospect is already a partner", (function () {
                return Generators.withUserSessions(2);
              }), (function (sessions) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user1 = match[0];
                return Generators.Log[/* withPartner */17](match[1], /* :: */[
                            user1,
                            /* [] */0
                          ], Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1)));
              }), (function (sessions, log) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user2 = match[1];
                var user1 = match[0];
                var func = Generators.Log[/* withPartnerProposed */12];
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4](Curry._1((function (param, param$1, param$2) {
                                        return Curry._5(func, param, param$1, param$2, user2, user1);
                                      })(/* None */0, /* None */0, /* None */0), log)), /* BadData */["Partner already exists"]);
              }));
        describe("when the creator proposes themselves", (function () {
                var user1 = Generators.userSession(PrimitiveTypes.UserId[/* fromString */1]("user1"));
                var log = Generators.Log[/* createVenture */11](user1);
                var func = Generators.Log[/* withPartnerProposed */12];
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4](Curry._1((function (param, param$1, param$2) {
                                        return Curry._5(func, param, param$1, param$2, user1, user1);
                                      })(/* None */0, /* None */0, /* None */0), log)), /* Ok */0);
              }));
        Fixtures.withCached(/* None */0, "PartnerProposal", "when proposing a partner that was removed", (function () {
                return Generators.withUserSessions(2);
              }), (function (sessions) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user2 = match[1];
                var user1 = match[0];
                return Generators.Log[/* withPartnerRemoved */22](user2, /* :: */[
                            user1,
                            /* [] */0
                          ], Generators.Log[/* withPartner */17](user2, /* :: */[
                                user1,
                                /* [] */0
                              ], Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1))));
              }), (function (sessions, log) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user2 = match[1];
                var user1 = match[0];
                var func = Generators.Log[/* withPartnerProposed */12];
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4](Curry._1((function (param, param$1, param$2) {
                                        return Curry._5(func, param, param$1, param$2, user1, user2);
                                      })(/* None */0, /* None */0, /* None */0), log)), /* Ok */0);
              }));
        return Fixtures.withCached(/* None */0, "PartnerProposal", "when the partner was removed but the proposal doesn't show it", (function () {
                      return Generators.withUserSessions(3);
                    }), (function (sessions) {
                      var match = Generators.threeUserSessionsFromArray(sessions);
                      var user3 = match[2];
                      var user2 = match[1];
                      var user1 = match[0];
                      return Generators.Log[/* withPartnerRemoved */22](user2, /* :: */[
                                  user1,
                                  /* :: */[
                                    user3,
                                    /* [] */0
                                  ]
                                ], Generators.Log[/* withPartner */17](user3, /* :: */[
                                      user1,
                                      /* :: */[
                                        user2,
                                        /* [] */0
                                      ]
                                    ], Generators.Log[/* withPartner */17](user2, /* :: */[
                                          user1,
                                          /* [] */0
                                        ], Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1)))));
                    }), (function (sessions, log) {
                      var match = Generators.threeUserSessionsFromArray(sessions);
                      var user3 = match[2];
                      var user2 = match[1];
                      var func = Generators.Log[/* withPartnerProposed */12];
                      var arg = function (param, param$1) {
                        return Curry._5(func, /* Some */[false], param, param$1, user3, user2);
                      };
                      return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4]((function (eta) {
                                          return Curry._1(arg(/* None */0, /* None */0), eta);
                                        })(log)), /* BadData */["Last removal doesn't match"]);
                    }));
      }));

describe("PartnerRemovalProposal", (function () {
        Fixtures.withCached(/* None */0, "PartnerRemovalProposal", "when proposing another partner", (function () {
                return Generators.withUserSessions(2);
              }), (function (sessions) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                var user1 = match[0];
                return Generators.Log[/* withPartner */17](match[1], /* :: */[
                            user1,
                            /* [] */0
                          ], Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1)));
              }), (function (sessions, log) {
                var match = Generators.twoUserSessionsFromArray(sessions);
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */4](Generators.Log[/* withPartnerRemovalProposed */19](match[0], match[1], log)), /* Ok */0);
              }));
        describe("validatePartnerRemovalData", (function () {
                Fixtures.withCached(/* None */0, "Watcher__CustodianKeyChain", "when the prospect is not a partner", (function () {
                        return Generators.withUserSessions(2);
                      }), (function (sessions) {
                        var match = Generators.twoUserSessionsFromArray(sessions);
                        var user1 = match[0];
                        return Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1));
                      }), (function (sessions, log) {
                        var match = Generators.twoUserSessionsFromArray(sessions);
                        var user2 = match[1];
                        return ValidationHelpers.testDataValidation(Venture__Validation.validatePartnerRemovalData, ValidationHelpers.constructState(log), /* record */[
                                    /* id */user2[/* userId */0],
                                    /* lastPartnerProcess */PrimitiveTypes.ProcessId[/* make */10](/* () */0)
                                  ], /* BadData */["Partner with Id '" + (PrimitiveTypes.UserId[/* toString */0](user2[/* userId */0]) + "' doesn't exist")]);
                      }));
                return Fixtures.withCached(/* None */0, "Watcher__CustodianKeyChain", "when lastPartnerProcess doesn't match", (function () {
                              return Generators.withUserSessions(2);
                            }), (function (sessions) {
                              var match = Generators.twoUserSessionsFromArray(sessions);
                              var user1 = match[0];
                              return Generators.Log[/* withPartner */17](match[1], /* :: */[
                                          user1,
                                          /* [] */0
                                        ], Generators.Log[/* withFirstPartner */18](user1)(Generators.Log[/* createVenture */11](user1)));
                            }), (function (sessions, log) {
                              var match = Generators.twoUserSessionsFromArray(sessions);
                              return ValidationHelpers.testDataValidation(Venture__Validation.validatePartnerRemovalData, ValidationHelpers.constructState(log), /* record */[
                                          /* id */match[1][/* userId */0],
                                          /* lastPartnerProcess */PrimitiveTypes.ProcessId[/* make */10](/* () */0)
                                        ], /* BadData */["lastPartnerProcess doesn't match"]);
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
