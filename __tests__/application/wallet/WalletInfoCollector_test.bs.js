// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Belt_Set = require("bs-platform/lib/js/belt_Set.js");
var Fixtures = require("../../helpers/Fixtures.bs.js");
var Generators = require("../../helpers/Generators.bs.js");
var WalletTypes = require("../../../src/application/wallet/WalletTypes.bs.js");
var WalletInfoCollector = require("../../../src/application/wallet/WalletInfoCollector.bs.js");

function constructState(log) {
  return Generators.Log[/* reduce */0]((function (s, param) {
                return WalletInfoCollector.apply(param[/* event */0], s);
              }), WalletInfoCollector.make(/* () */0), log);
}

describe("WalletInfoCollector", (function () {
        return Fixtures.withCached(/* None */0, "WalletInfoCollector", "oldInputs", (function () {
                      return Generators.withUserSessions(3);
                    }), (function (sessions) {
                      var match = Generators.twoUserSessionsFromArray(sessions);
                      var user2 = match[1];
                      var user1 = match[0];
                      return Generators.Log[/* withIncomeDetected */36](2, Generators.Log[/* withIncomeDetected */36](1, Generators.Log[/* withIncomeDetected */36](0, Generators.Log[/* withIncomeAddressExposed */35](user1, Generators.Log[/* withAccountKeyChainActivated */34](/* None */0, user1, Generators.Log[/* withAccountKeyChainIdentified */33](Generators.Log[/* withCustodianKeyChain */32](/* Some */[1], /* None */0, user1, Generators.Log[/* withPartnerRemoved */20](user2, /* :: */[
                                                              user1,
                                                              /* [] */0
                                                            ], Generators.Log[/* withIncomeAddressExposed */35](user1, Generators.Log[/* withAccountKeyChainActivated */34](/* None */0, user1, Generators.Log[/* withAccountKeyChainIdentified */33](Generators.Log[/* withCustodianKeyChain */32](/* None */0, /* None */0, user2, Generators.Log[/* withCustodian */27](user2, /* :: */[
                                                                                  user1,
                                                                                  /* :: */[
                                                                                    user2,
                                                                                    /* [] */0
                                                                                  ]
                                                                                ], Generators.Log[/* withPartner */15](user2, /* :: */[
                                                                                      user1,
                                                                                      /* [] */0
                                                                                    ], Generators.Log[/* withIncomeAddressExposed */35](user1, Generators.Log[/* withAccountKeyChainActivated */34](/* None */0, user1, Generators.Log[/* withAccountKeyChainIdentified */33](Generators.Log[/* withCustodianKeyChain */32](/* None */0, /* None */0, user1, Generators.Log[/* withCustodian */27](user1, /* :: */[
                                                                                                          user1,
                                                                                                          /* [] */0
                                                                                                        ], Generators.Log[/* withAccount */23](user1, Generators.Log[/* withFirstPartner */16](user1)(Generators.Log[/* createVenture */10](user1))))))))))))))))))))));
                    }), (function (sessions, log) {
                      var match = Generators.twoUserSessionsFromArray(sessions);
                      var user1 = match[0];
                      var info = constructState(log);
                      return Jest.test("1 input is old", (function () {
                                    return Jest.Expect[/* toEqual */12](1, Jest.Expect[/* expect */0](Belt_Set.size(WalletInfoCollector.oldInputs(WalletTypes.AccountIndex[/* default */9], user1[/* userId */0], info))));
                                  }));
                    }));
      }));

exports.constructState = constructState;
/*  Not a pure module */
