// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Fixtures = require("../../helpers/Fixtures.bs.js");
var Generators = require("../../helpers/Generators.bs.js");
var WalletTypes = require("../../../src/application/wallet/WalletTypes.bs.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var AddressCollector = require("../../../src/application/wallet/AddressCollector.bs.js");

function constructState(log) {
  return Generators.Log[/* reduce */1]((function (state, param) {
                return AddressCollector.apply(param[/* event */0], state);
              }), AddressCollector.make(/* () */0), log);
}

describe("AddressCollector", (function () {
        return Fixtures.withCached(/* None */0, "AddressCollector", "collects addresses", (function () {
                      return Fixtures.threeUserSessionsArray;
                    }), (function (sessions) {
                      var match = Generators.twoUserSessionsFromArray(sessions);
                      var user1 = match[0];
                      return Generators.Log[/* withIncomeAddressExposed */36](user1, Generators.Log[/* withAccountKeyChainActivated */35](/* None */0, user1, Generators.Log[/* withAccountKeyChainIdentified */34](Generators.Log[/* withCustodianKeyChain */33](/* None */0, /* None */0, user1, Generators.Log[/* withCustodian */28](user1, /* :: */[
                                                  user1,
                                                  /* [] */0
                                                ], Generators.Log[/* withAccount */24](user1, Generators.Log[/* withFirstPartner */17](user1)(Fixtures.createVenture(user1))))))));
                    }), (function (_, log) {
                      return Jest.test("has the address", (function () {
                                    return Jest.Expect[/* toEqual */12](/* record */[
                                                /* nCoSigners */1,
                                                /* nPubKeys */1,
                                                /* coordinates : tuple */[
                                                  WalletTypes.AccountIndex[/* fromInt */1](0),
                                                  "41f508a17ccd3b6e325be410341fd320d8d72befbb54cddf5723432a340bcc73",
                                                  WalletTypes.CoSignerIndex[/* fromInt */1](0),
                                                  WalletTypes.ChainIndex[/* externalChain */9],
                                                  WalletTypes.AddressIndex[/* fromInt */1](0)
                                                ],
                                                /* witnessScript */"5121032a66ac40d30d81a2d0dca008ae11f0fed2a00896fe8e61350b2f9d0ca6256b6351ae",
                                                /* redeemScript */"0020a598432cbaab0e4039f2e240a97097e4f9a1e1763edd7ae2ca0021b4268ba8fc",
                                                /* displayAddress */"2N7unXRz7bkBsMMCQq3dcxLXXi1sPNq8m2o"
                                              ], Jest.Expect[/* expect */0](Belt_MapString.getExn(constructState(log)[/* exposedAddresses */2], "2N7unXRz7bkBsMMCQq3dcxLXXi1sPNq8m2o")));
                                  }));
                    }));
      }));

var G = 0;

var L = 0;

var F = 0;

exports.G = G;
exports.L = L;
exports.F = F;
exports.constructState = constructState;
/*  Not a pure module */
