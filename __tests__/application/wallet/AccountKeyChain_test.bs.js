// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Generators = require("../../helpers/Generators.bs.js");
var WalletTypes = require("../../../src/application/wallet/WalletTypes.bs.js");
var AccountKeyChain = require("../../../src/application/wallet/AccountKeyChain.bs.js");

describe("Collection", (function () {
        var match = Generators.twoUserSessions(/* () */0);
        var user2 = match[1];
        var user1 = match[0];
        var accountKeyChain1 = Generators.accountKeyChain(/* None */0, /* None */0, /* :: */[
              user1,
              /* :: */[
                user2,
                /* [] */0
              ]
            ]);
        var accountKeyChain2 = Generators.accountKeyChain(/* None */0, /* Some */[1], /* :: */[
              user1,
              /* :: */[
                user2,
                /* [] */0
              ]
            ]);
        var keyChains = AccountKeyChain.Collection[/* add */1](accountKeyChain1, AccountKeyChain.Collection[/* add */1](accountKeyChain2, /* [] */0));
        Jest.test("lookup", (function () {
                return Jest.Expect[/* toEqual */12](accountKeyChain1, Jest.Expect[/* expect */0](AccountKeyChain.Collection[/* lookup */2](WalletTypes.AccountIndex[/* default */9], WalletTypes.AccountKeyChainIndex[/* first */2], keyChains)));
              }));
        return Jest.test("latest", (function () {
                      return Jest.Expect[/* toEqual */12](accountKeyChain2, Jest.Expect[/* expect */0](AccountKeyChain.Collection[/* latest */3](WalletTypes.AccountIndex[/* default */9], keyChains)));
                    }));
      }));

var G = 0;

exports.G = G;
/*  Not a pure module */
