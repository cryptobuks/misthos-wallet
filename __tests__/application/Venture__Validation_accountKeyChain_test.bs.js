// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Event = require("../../src/application/events/Event.bs.js");
var Generators = require("../helpers/Generators.bs.js");
var WalletTypes = require("../../src/application/wallet/WalletTypes.bs.js");
var ValidationHelpers = require("../helpers/ValidationHelpers.bs.js");
var Venture__Validation = require("../../src/application/Venture__Validation.bs.js");

describe("AccountKeyChainIdentified", (function () {
        describe("when everything is fine", (function () {
                var match = Generators.twoUserSessions(/* () */0);
                var user1 = match[0];
                var log = Generators.Log[/* withCustodianKeyChain */31](/* None */0, /* None */0, user1, Generators.Log[/* withCustodian */26](user1, /* :: */[
                          user1,
                          /* [] */0
                        ], Generators.Log[/* withAccount */22](user1, Generators.Log[/* withFirstPartner */15](user1)(Generators.Log[/* createVenture */9](user1)))));
                return ValidationHelpers.testValidationResult(ValidationHelpers.constructState(log), Generators.Log[/* lastItem */3](Generators.Log[/* withAccountKeyChainIdentified */32](log)), /* Ok */0);
              }));
        describe("when the account doesn't exist", (function () {
                var match = Generators.twoUserSessions(/* () */0);
                var user1 = match[0];
                var log = Generators.Log[/* withCustodianKeyChain */31](/* None */0, /* None */0, user1, Generators.Log[/* withCustodian */26](user1, /* :: */[
                          user1,
                          /* [] */0
                        ], Generators.Log[/* withAccount */22](user1, Generators.Log[/* withFirstPartner */15](user1)(Generators.Log[/* createVenture */9](user1)))));
                var identified = Event.getAccountKeyChainIdentifiedExn(Generators.Log[/* lastEvent */4](Generators.Log[/* withAccountKeyChainIdentified */32](log)));
                var init = identified[/* keyChain */1];
                return ValidationHelpers.testDataValidation((function (param, param$1) {
                              return ValidationHelpers.withSystemIssuer(Venture__Validation.validateAccountKeyChainIdentified, param, param$1);
                            }), ValidationHelpers.constructState(log), /* record */[
                            /* identifier */identified[/* identifier */0],
                            /* keyChain : record */[
                              /* accountIdx */WalletTypes.AccountIndex[/* fromInt */1](1),
                              /* identifier */init[/* identifier */1],
                              /* nCoSigners */init[/* nCoSigners */2],
                              /* custodianKeyChains */init[/* custodianKeyChains */3]
                            ]
                          ], /* BadData */["Account doesn't exist"]);
              }));
        return /* () */0;
      }));

/*  Not a pure module */
