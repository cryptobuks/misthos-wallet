// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Utils = require("../../src/utils/Utils.bs.js");
var $$String = require("bs-platform/lib/js/string.js");
var UserInfo = require("../../src/application/UserInfo.bs.js");
var BitcoinjsLib = require("bitcoinjs-lib");
var PrimitiveTypes = require("../../src/application/PrimitiveTypes.bs.js");

function userSession(userId, keyPair) {
  var appPubKey = Utils.publicKeyFromKeyPair(keyPair);
  var chainCode = Utils.bufFromHex($$String.sub(appPubKey, 0, 64));
  return /* record */[
          /* userId */userId,
          /* appPrivateKey */keyPair.toWIF(),
          /* issuerKeyPair */keyPair,
          /* storagePrefix */UserInfo.storagePrefix(appPubKey),
          /* masterKeyChain */new BitcoinjsLib.HDNode(keyPair, chainCode),
          /* network : Testnet */1
        ];
}

var keyA = BitcoinjsLib.ECPair.fromWIF("cUVTgxrs44T7zVon5dSDicBkBRjyfLwL7RF1RvR7n94ar3HEaLs1", BitcoinjsLib.networks.testnet);

var keyB = BitcoinjsLib.ECPair.fromWIF("cPMRPo3fXGehCmFC5QsSFcZmYivsFtLVexxWi22CFwocvndXLqP1", BitcoinjsLib.networks.testnet);

var keyC = BitcoinjsLib.ECPair.fromWIF("cPfdeLvhwvAVRRM5wiEWopWviGG65gbxQCHdtFL56PYUJXsTYixf", BitcoinjsLib.networks.testnet);

var threeUserSessions_000 = userSession(PrimitiveTypes.UserId[/* fromString */1]("user1"), keyA);

var threeUserSessions_001 = userSession(PrimitiveTypes.UserId[/* fromString */1]("user2"), keyB);

var threeUserSessions_002 = userSession(PrimitiveTypes.UserId[/* fromString */1]("user3"), keyC);

var threeUserSessions = /* tuple */[
  threeUserSessions_000,
  threeUserSessions_001,
  threeUserSessions_002
];

exports.userSession = userSession;
exports.threeUserSessions = threeUserSessions;
/* keyA Not a pure module */
